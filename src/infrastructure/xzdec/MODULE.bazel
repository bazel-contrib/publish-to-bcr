module(name = "publish-to-bcr")

bazel_dep(name = "aspect_bazel_lib", version = "2.9.3")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "toolchains_llvm", version = "1.2.0")
bazel_dep(name = "xz", version = "5.4.5.bcr.5")

# https://github.com/bazel-contrib/toolchains_llvm/pull/405
#
# FIXME: Remove when a new `toolchains_llvm` has been released.
git_override(
    module_name = "toolchains_llvm",
    commit = "bda1c9fbf232b682c30d039f8e4a5e3cf3025d0f",
    remote = "https://github.com/bazel-contrib/toolchains_llvm",
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    libclang_rt = {
        "@libclang_rt-wasm32-wasi//:libclang_rt.builtins-wasm32.a": "wasm32-unknown-unknown/libclang_rt.builtins.a",
    },
    llvm_versions = {
        # Pin to an older LLVM version due to a stray Homebrew dependency
        # in the macOS build of v19.1.0.
        #
        # https://github.com/llvm/llvm-project/issues/110070
        "": "18.1.8",
    },
    stdlib = {"wasm32": "libc"},
)
llvm.sysroot(
    label = "@wasi-sysroot//sysroots/wasm32-wasip2",
    targets = ["wasm32"],
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

wasi_sysroot = use_repo_rule("//:wasm.bzl", "wasi_sysroot")

wasm32_libclang_rt = use_repo_rule("//:wasm.bzl", "wasm32_libclang_rt")

wasi_sysroot(name = "wasi-sysroot")

wasm32_libclang_rt(name = "libclang_rt-wasm32-wasi")
